// Copyright (c) 2020-2023 Datamixin.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.andia.mixin.padang.garut";

package dataminer;

message DataminerValue {

	oneof value {
	
		DataminerNone none = 1;
		DataminerError error = 2;
		DataminerText text = 3;
		DataminerNumber number = 4;
		DataminerLogical logical = 5;
		DataminerList list = 6;
		DataminerObject object = 7;
		DataminerTable table = 8;
		DataminerBrief brief = 9;
		DataminerBytes bytes = 10;
		DataminerPlot plot = 11;
		DataminerPrototype prototype = 12;
		
  	}
	
}

message DataminerNone {
	
}

message DataminerError {
	
	string message = 1;

}

message DataminerText {
	
	string value = 1;

}

message DataminerNumber {
	
	oneof value {
		int32 int32 = 1;
		int64 int64 = 2;
		float float = 3;
		double double = 4;
	}
	string subtype = 5;
	int32 remark = 6;

}

message DataminerLogical {
	
	bool value = 1;

}

message DataminerObject {
	
   	repeated DataminerProperty property = 1;

}

message DataminerProperty {

	string key = 1;
	DataminerValue value = 2;

}

message DataminerList {
	
    repeated DataminerValue element = 1;
    string type = 2;

}

message DataminerTable {
	
    repeated DataminerColumn column = 1;
    repeated DataminerRow record = 2;

}

message DataminerColumn {

	oneof key {
		int64 index = 1;
		string name = 2;
	}
    string type = 3;
    
}

message DataminerRow {

    repeated DataminerValue value = 1;
    
}

message DataminerBrief {
	
	string type = 1;
	bool simple = 2;
	int32 children = 3;
	string propose = 4;
	string digest = 5;
	string key = 6;
	DataminerValue value = 7;

}

message DataminerBytes {
	
	bytes bytes = 1;

}

message DataminerPlot {
	
	string type = 1;
	DataminerValue spec = 2;

}

message DataminerPrototype {
	
	string definition = 1;

}